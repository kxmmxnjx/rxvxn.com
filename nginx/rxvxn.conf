# Nginx configuration for rxvxn.com
# Location: /etc/nginx/sites-available/rxvxn.conf
# Symlink to: /etc/nginx/sites-enabled/rxvxn.conf

server {
    listen 80;
    listen [::]:80;
    
    server_name rxvxn.com www.rxvxn.com;
    
    # Document root
    root /var/www/rxvxn.com;
    index index.html;
    
    # Logging
    access_log /var/log/nginx/rxvxn.com-access.log;
    error_log /var/log/nginx/rxvxn.com-error.log;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_types text/plain text/css text/xml text/javascript 
               application/x-javascript application/xml+rss 
               application/javascript application/json;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    
    # Cache static assets
    location ~* \.(css|js|jpg|jpeg|png|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
    }
    
    # Cache JSON data (shorter expiry)
    location ~* \.json$ {
        expires 1h;
        add_header Cache-Control "public, must-revalidate";
    }
    
    # Prevent access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }
    
    # Client-side routing: serve index.html for all routes
    location / {
        try_files $uri $uri/ /index.html;
    }
    
    # Optional: Proxy to Node.js backend (if using)
    # Uncomment when backend is implemented
    # location /api {
    #     proxy_pass http://localhost:3000;
    #     proxy_http_version 1.1;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection 'upgrade';
    #     proxy_set_header Host $host;
    #     proxy_set_header X-Real-IP $remote_addr;
    #     proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    #     proxy_set_header X-Forwarded-Proto $scheme;
    #     proxy_cache_bypass $http_upgrade;
    # }
}

# SSL configuration (for future HTTPS setup)
# Uncomment after obtaining SSL certificate with certbot
# server {
#     listen 443 ssl http2;
#     listen [::]:443 ssl http2;
#     
#     server_name rxvxn.com www.rxvxn.com;
#     
#     ssl_certificate /etc/letsencrypt/live/rxvxn.com/fullchain.pem;
#     ssl_certificate_key /etc/letsencrypt/live/rxvxn.com/privkey.pem;
#     
#     ssl_protocols TLSv1.2 TLSv1.3;
#     ssl_prefer_server_ciphers on;
#     ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384;
#     
#     # ... (rest of config same as above)
# }
#
# # Redirect HTTP to HTTPS
# server {
#     listen 80;
#     listen [::]:80;
#     server_name rxvxn.com www.rxvxn.com;
#     return 301 https://$server_name$request_uri;
# }
